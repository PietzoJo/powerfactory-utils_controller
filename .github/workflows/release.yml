name: release

on: workflow_dispatch

jobs:
  tests:
    uses: ./.github/workflows/tests.yml
  release:
    name: "Release a new version"
    runs-on: ubuntu-latest
    needs: [tests]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          fetch-depth: 0

      - name: Set up Python 3.9.13
        uses: actions/setup-python@v3
        with:
          python-version: 3.9.13

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v2.7
        with:
          python-version: 3.9.13
          architecture: x64
          prerelease: true
          enable-pep582: true

      - name: "Temporarily disable 'include administrators' default branch protection"
        uses: benjefferies/branch-protection-bot@master
        if: always()
        with:
          access_token: ${{ secrets.ACCESS_TOKEN }}
          branch: ${{ github.event.repository.default_branch }}
          enforce_admins: false

      - name: Bump version and create changelog
        uses: commitizen-tools/commitizen-action@0.14.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          changelog_increment_filename: body.md

      - name: "Restore 'include administrators' default branch protection"
        uses: benjefferies/branch-protection-bot@master
        if: always()
        with:
          access_token: ${{ secrets.ACCESS_TOKEN }}
          branch: ${{ github.event.repository.default_branch }}
          enforce_admins: ${{ steps.disable_include_admins.outputs.initial_status }}

      - name: Cache PDM __pypackages__
        uses: actions/cache@v3
        id: cache
        with:
          path: __pypackages__
          key: pdm-${{ hashFiles('**/pdm.lock') }}
          restore-keys: |
            pdm-${{ hashFiles('**/pdm.lock') }}

      - name: Build Python packages
        run: pdm build

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body_path: "body.md"
          tag_name: ${{ env.REVISION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
